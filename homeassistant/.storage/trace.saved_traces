{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.fa181cc8a2c7458cb020d87127e9cfde": [
      {
        "extended_dict": {
          "last_step": "action/6",
          "run_id": "2fc6e45bd732412d5cbd5d0c0e8c3823",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:18.714479+00:00",
            "finish": "2022-07-11T05:47:30.166459+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T05:47:18.714635+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.shellies_announce",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T05:53:45.494482+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "fa181cc8a2c7458cb020d87127e9cfde",
                      "friendly_name": "Shellies Announce"
                    },
                    "last_changed": "2022-07-11T05:41:45.094945+00:00",
                    "last_updated": "2022-07-11T05:41:45.094945+00:00",
                    "context": {
                      "id": "01G7NWE8G6X16JRKMTNF25QVCC",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T05:47:18.931161+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NWRE9MTEWJ726BGHXWRRGC",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "payload": "announce",
                      "topic": "shellies/command"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-11T05:47:26.560042+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-11T05:47:26.958185+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER1"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-11T05:47:29.087274+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER2"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-11T05:47:29.498470+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER3"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-11T05:47:29.735905+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER4"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-11T05:47:29.765459+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER5"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Shellies Announce",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "data": {
                  "payload": "announce",
                  "topic": "shellies/command"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER1"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER2"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER3"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER4"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER5"
                },
                "service": "mqtt.publish"
              }
            ],
            "id": "fa181cc8a2c7458cb020d87127e9cfde"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWRE9MTEWJ726BGHXWRRGC",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/6",
          "run_id": "2fc6e45bd732412d5cbd5d0c0e8c3823",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:18.714479+00:00",
            "finish": "2022-07-11T05:47:30.166459+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.ha_new_version_available": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "0c9be411506d0ec8930a48bd1f2ac4fb",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-11T05:47:18.716716+00:00",
            "finish": "2022-07-11T05:47:18.717125+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-11T05:47:18.716823+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.new_ha_version_available",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-10T21:53:26.246925+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "ha_new_version_available",
                      "friendly_name": "New HA Version available"
                    },
                    "last_changed": "2022-07-11T05:41:45.113112+00:00",
                    "last_updated": "2022-07-11T05:41:45.113112+00:00",
                    "context": {
                      "id": "01G7NWE8GSJXXXTX1BMPPK27A9",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-11T05:47:18.716914+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-11T05:47:18.716991+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "alias": "New HA Version available",
            "id": "ha_new_version_available",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "to": "on"
              },
              {
                "event": "start",
                "platform": "homeassistant"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "state": "on"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unknown' }}"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unavailable' }}"
              }
            ],
            "action": [
              {
                "service": "persistent_notification.create",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              },
              {
                "service": "notify.scialla",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWRE9W91NHAK36PYST6PR4",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "0c9be411506d0ec8930a48bd1f2ac4fb",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-11T05:47:18.716716+00:00",
            "finish": "2022-07-11T05:47:18.717125+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.None": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "29cdfd8dc87b5751d2fb7c74ef8d86db",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-11T05:47:18.717713+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T05:47:18.717819+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.reset_piantana_e_ballerini_in_avvio_ha",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T05:53:45.497592+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Reset Piantana e Ballerini in avvio HA"
                    },
                    "last_changed": "2022-07-11T05:41:45.122167+00:00",
                    "last_updated": "2022-07-11T05:41:45.122167+00:00",
                    "context": {
                      "id": "01G7NWE8H2JWFS6TQVSJ1X0YKE",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T05:47:18.970636+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NWRE9X0PBZ0S6G0BW4565Z",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.ballerini",
                        "light.koogeek_lb1_1f299c",
                        "light.cappa",
                        "light.striscia_letto",
                        "light.wled"
                      ]
                    }
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Reset Piantana e Ballerini in avvio HA",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "entity_id": "light.ballerini, light.koogeek_lb1_1f299c, light.cappa, light.striscia_letto, light.wled"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWRE9X0PBZ0S6G0BW4565Z",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "29cdfd8dc87b5751d2fb7c74ef8d86db",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-11T05:47:18.717713+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "12a701e23a3681262cfe9454a66d48e3",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-11T05:47:18.718874+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T05:47:18.718983+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.apertura_contatti_e_reset",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T05:53:45.498662+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Apertura CONTATTI e reset"
                    },
                    "last_changed": "2022-07-11T05:41:45.125309+00:00",
                    "last_updated": "2022-07-11T05:41:45.125309+00:00",
                    "context": {
                      "id": "01G7NWE8H5MH23K8C8649HDT84",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T05:47:18.977144+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NWRE9YAPS9440MD2CR0CD6",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "tele/SonoffBridge/RESULT",
                      "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                      "retain": true
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Apertura CONTATTI e reset",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "condition": [],
            "action": {
              "service": "mqtt.publish",
              "data": {
                "topic": "tele/SonoffBridge/RESULT",
                "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                "retain": true
              }
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWRE9YAPS9440MD2CR0CD6",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "12a701e23a3681262cfe9454a66d48e3",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-11T05:47:18.718874+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.announce_zigbee": [
      {
        "extended_dict": {
          "last_step": "action/12",
          "run_id": "55fc4b04319037bb54033dca8630a89a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:18.742551+00:00",
            "finish": "2022-07-11T05:47:32.422761+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T05:47:18.742684+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.announce_zigbee",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T05:53:45.504279+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "announce_zigbee",
                      "friendly_name": "Announce Zigbee"
                    },
                    "last_changed": "2022-07-11T05:41:45.136899+00:00",
                    "last_updated": "2022-07-11T05:41:45.136899+00:00",
                    "context": {
                      "id": "01G7NWE8HGX684M4HA6YN5A9J6",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T05:47:19.027476+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NWREAP3XAS5Q1W5NHST6NE",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Selecline/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-11T05:47:26.871785+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Samsung/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-11T05:47:29.061346+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Onkyo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-11T05:47:29.486497+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Phon/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-11T05:47:29.525743+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-11T05:47:29.747810+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Frigo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-11T05:47:30.011875+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Antenna TV/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/7": [
              {
                "path": "action/7",
                "timestamp": "2022-07-11T05:47:31.772092+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Striscia Letto/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/8": [
              {
                "path": "action/8",
                "timestamp": "2022-07-11T05:47:32.253476+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Cappa/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/9": [
              {
                "path": "action/9",
                "timestamp": "2022-07-11T05:47:32.287995+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Lampada Zanzare/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/10": [
              {
                "path": "action/10",
                "timestamp": "2022-07-11T05:47:32.379639+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l1\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/11": [
              {
                "path": "action/11",
                "timestamp": "2022-07-11T05:47:32.394096+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l2\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/12": [
              {
                "path": "action/12",
                "timestamp": "2022-07-11T05:47:32.407017+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l3\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Announce Zigbee",
            "id": "announce_zigbee",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Selecline/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Samsung/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Onkyo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Phon/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Frigo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Antenna TV/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Striscia Letto/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Cappa/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Lampada Zanzare/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l1\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l2\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l3\":\"\"}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWREAP3XAS5Q1W5NHST6NE",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/12",
          "run_id": "55fc4b04319037bb54033dca8630a89a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:18.742551+00:00",
            "finish": "2022-07-11T05:47:32.422761+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.aggiornamenti_app_hacs": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "4d3268af8fe85396ffd65648e9bceca1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:33.253058+00:00",
            "finish": "2022-07-11T05:47:33.345414+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T05:47:33.253197+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.aggiornamenti_app_hacs",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T13:53:47.378305+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "aggiornamenti_app_hacs",
                      "friendly_name": "Aggiornamenti App Hacs"
                    },
                    "last_changed": "2022-07-11T05:41:45.131252+00:00",
                    "last_updated": "2022-07-11T05:41:45.131252+00:00",
                    "context": {
                      "id": "01G7NWE8HB1QDMJBG95AB1SP6N",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "numeric_state",
                    "entity_id": "sensor.hacs",
                    "below": null,
                    "above": 0.0,
                    "from_state": {
                      "entity_id": "sensor.hacs",
                      "state": "unknown",
                      "attributes": {
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-11T05:46:59.632516+00:00",
                      "last_updated": "2022-07-11T05:46:59.632516+00:00",
                      "context": {
                        "id": "01G7NWQVNGDDMAM39RSSPDJFTW",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.hacs",
                      "state": "1",
                      "attributes": {
                        "repositories": [
                          {
                            "name": "hacs/integration",
                            "display_name": "HACS",
                            "installed_version": "1.25.5",
                            "available_version": "1.26.0"
                          }
                        ],
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-11T05:47:33.244319+00:00",
                      "last_updated": "2022-07-11T05:47:33.244319+00:00",
                      "context": {
                        "id": "01G7NWRWFWWNCMD7ZVGCM29EFC",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "description": "numeric state of sensor.hacs"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T05:47:33.258295+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NWRWG48RAJPYJQRQ7AAPEN",
                    "parent_id": "01G7NWRWFWWNCMD7ZVGCM29EFC",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "scialla",
                    "service_data": {
                      "message": "Nuova versione di *HACS* (`hacs/integration`) disponibile: `1.26.0`. Installata: `1.25.5`",
                      "data": {
                        "username": "HACS",
                        "icon": "hacs"
                      },
                      "title": "Nuova versione HACS disponibile"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Aggiornamenti App Hacs",
            "id": "aggiornamenti_app_hacs",
            "trigger": [
              {
                "entity_id": "sensor.hacs",
                "platform": "numeric_state",
                "above": 0
              }
            ],
            "action": [
              {
                "data": {
                  "message": "{% for repo in state_attr('sensor.hacs', 'repositories') %} Nuova versione di *{{ repo.display_name }}* (`{{ repo.name  }}`) disponibile: `{{ repo.available_version }}`. Installata: `{{ repo.installed_version }}`  {% endfor %}",
                  "data": {
                    "username": "HACS",
                    "icon": "hacs"
                  },
                  "title": "Nuova versione HACS disponibile"
                },
                "service": "notify.scialla"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NWRWG48RAJPYJQRQ7AAPEN",
            "parent_id": "01G7NWRWFWWNCMD7ZVGCM29EFC",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "4d3268af8fe85396ffd65648e9bceca1",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T05:47:33.253058+00:00",
            "finish": "2022-07-11T05:47:33.345414+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs"
        }
      }
    ],
    "automation.tariffe_consumo": [
      {
        "extended_dict": {
          "last_step": "action/0/choose/1/sequence/1",
          "run_id": "f933830ed67d734a250766c409ddc82a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:00:00.014285+00:00",
            "finish": "2022-07-11T06:00:00.066956+00:00"
          },
          "domain": "automation",
          "item_id": "tariffe_consumo",
          "trigger": "time",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-11T06:00:00.014697+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.tariffe_consumo",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-11T05:00:00.015411+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "tariffe_consumo",
                      "friendly_name": "Tariffe Consumo"
                    },
                    "last_changed": "2022-07-11T05:41:45.134836+00:00",
                    "last_updated": "2022-07-11T05:41:45.134836+00:00",
                    "context": {
                      "id": "01G7NWE8HEHAKHBJE0T12MAE2K",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "8",
                    "idx": "1",
                    "platform": "time",
                    "now": "2022-07-11T08:00:00.001111+02:00",
                    "description": "time",
                    "entity_id": null
                  },
                  "tariff": "F1"
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T06:00:00.035010+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NXFNRD8RWK9HWM5WJH9CGS",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "choice": 1
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2022-07-11T06:00:00.038615+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2022-07-11T06:00:00.038775+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/1": [
              {
                "path": "action/0/choose/1",
                "timestamp": "2022-07-11T06:00:00.039300+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/1/conditions/0": [
              {
                "path": "action/0/choose/1/conditions/0",
                "timestamp": "2022-07-11T06:00:00.039481+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/1/sequence/0": [
              {
                "path": "action/0/choose/1/sequence/0",
                "timestamp": "2022-07-11T06:00:00.043106+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "00:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:00:00.043671"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:59:59.999999"
                  },
                  "weekday": [
                    "mon",
                    "tue",
                    "wed",
                    "thu",
                    "fri"
                  ],
                  "now_weekday": "mon",
                  "result": true
                }
              }
            ],
            "action/0/choose/1/sequence/1": [
              {
                "path": "action/0/choose/1/sequence/1",
                "timestamp": "2022-07-11T06:00:00.044566+00:00",
                "result": {
                  "params": {
                    "domain": "select",
                    "service": "select_option",
                    "service_data": {
                      "option": "F1",
                      "entity_id": [
                        "select.consumo_mensile"
                      ]
                    },
                    "target": {
                      "entity_id": [
                        "select.consumo_mensile"
                      ]
                    }
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Tariffe Consumo",
            "id": "tariffe_consumo",
            "trigger": [
              {
                "platform": "time",
                "id": "7",
                "at": "07:00:00",
                "variables": {
                  "tariff": "F2"
                }
              },
              {
                "platform": "time",
                "id": "8",
                "at": "08:00:00",
                "variables": {
                  "tariff": "F1"
                }
              },
              {
                "platform": "time",
                "id": "19",
                "at": "19:00:00",
                "variables": {
                  "tariff": "F2"
                }
              },
              {
                "platform": "time",
                "id": "23",
                "at": "23:00:00",
                "variables": {
                  "tariff": "F3"
                }
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "7"
                      }
                    ],
                    "sequence": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri",
                          "sat"
                        ]
                      },
                      {
                        "service": "select.select_option",
                        "target": {
                          "entity_id": "select.consumo_mensile"
                        },
                        "data": {
                          "option": "{{ tariff }}"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "8"
                      }
                    ],
                    "sequence": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      },
                      {
                        "service": "select.select_option",
                        "target": {
                          "entity_id": "select.consumo_mensile"
                        },
                        "data": {
                          "option": "{{ tariff }}"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "19"
                      }
                    ],
                    "sequence": [
                      {
                        "condition": "time",
                        "weekday": [
                          "mon",
                          "tue",
                          "wed",
                          "thu",
                          "fri"
                        ]
                      },
                      {
                        "service": "select.select_option",
                        "target": {
                          "entity_id": "select.consumo_mensile"
                        },
                        "data": {
                          "option": "{{ tariff }}"
                        }
                      }
                    ]
                  },
                  {
                    "conditions": [
                      {
                        "condition": "trigger",
                        "id": "23"
                      }
                    ],
                    "sequence": [
                      {
                        "service": "select.select_option",
                        "target": {
                          "entity_id": "select.consumo_mensile"
                        },
                        "data": {
                          "option": "{{ tariff }}"
                        }
                      }
                    ]
                  }
                ]
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NXFNRD8RWK9HWM5WJH9CGS",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/choose/1/sequence/1",
          "run_id": "f933830ed67d734a250766c409ddc82a",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:00:00.014285+00:00",
            "finish": "2022-07-11T06:00:00.066956+00:00"
          },
          "domain": "automation",
          "item_id": "tariffe_consumo",
          "trigger": "time"
        }
      }
    ],
    "automation.gestione_notturna_ventilatore_silvia": [
      {
        "extended_dict": {
          "last_step": "action/0/default/0",
          "run_id": "dbe4b17b4fa007f59ecbd1072f1abea9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:06:12.448197+00:00",
            "finish": "2022-07-11T06:06:12.531898+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2022-07-11T06:06:12.448539+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.gestione_notturna_ventilatore_silvia",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-11T04:30:00.013618+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "gestione_notturna_ventilatore_silvia",
                      "friendly_name": "Gestione notturna ventilatore Silvia"
                    },
                    "last_changed": "2022-07-11T05:41:45.111393+00:00",
                    "last_updated": "2022-07-11T05:41:45.111393+00:00",
                    "context": {
                      "id": "01G7NWE8GQ3B90QAW5A4KEYR4E",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "platform": "numeric_state",
                    "entity_id": "sensor.temperatura_silvia",
                    "below": null,
                    "above": 30.0,
                    "from_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "30.0",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-11T05:50:12.472669+00:00",
                      "last_updated": "2022-07-11T05:50:12.472669+00:00",
                      "context": {
                        "id": "01G7NWXQZRXGM8BQDFY6M5C6KM",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "30.1",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-11T06:05:12.439954+00:00",
                      "last_updated": "2022-07-11T06:05:12.439954+00:00",
                      "context": {
                        "id": "01G7NXS6VQ7C6T2S0RS51NV8Y5",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.temperatura_silvia"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T06:06:12.462443+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NXV1EZS74VPSQSAPCMTC5A",
                    "parent_id": "01G7NXS6VQ7C6T2S0RS51NV8Y5",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2022-07-11T06:06:12.464703+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2022-07-11T06:06:12.465036+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/1": [
              {
                "path": "action/0/choose/0/conditions/1",
                "timestamp": "2022-07-11T06:06:12.471017+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/1/entity_id/0": [
              {
                "path": "action/0/choose/0/conditions/1/entity_id/0",
                "timestamp": "2022-07-11T06:06:12.471321+00:00",
                "result": {
                  "result": false,
                  "state": "not_home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0/default/0": [
              {
                "path": "action/0/default/0",
                "timestamp": "2022-07-11T06:06:12.474714+00:00",
                "result": {
                  "params": {
                    "domain": "fan",
                    "service": "turn_off",
                    "service_data": {
                      "entity_id": "fan.ventilatore_silvia"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Gestione notturna ventilatore Silvia",
            "id": "gestione_notturna_ventilatore_silvia",
            "trigger": [
              {
                "platform": "time",
                "at": "06:30:00"
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "below": 30,
                "for": {
                  "minutes": 5
                }
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "above": 30,
                "for": {
                  "minutes": 1
                }
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ trigger.platform == 'numeric_state' and trigger.to_state.state | float > 30 }}"
                      },
                      {
                        "condition": "state",
                        "entity_id": "person.silvia",
                        "state": "home"
                      },
                      {
                        "condition": "time",
                        "after": "23:00:00",
                        "before": "06:20:00"
                      }
                    ],
                    "sequence": [
                      {
                        "service": "fan.turn_on",
                        "data": {
                          "entity_id": "fan.ventilatore_silvia"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "fan.turn_off",
                    "data": {
                      "entity_id": "fan.ventilatore_silvia"
                    }
                  }
                ]
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NXV1EZS74VPSQSAPCMTC5A",
            "parent_id": "01G7NXS6VQ7C6T2S0RS51NV8Y5",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/default/0",
          "run_id": "dbe4b17b4fa007f59ecbd1072f1abea9",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:06:12.448197+00:00",
            "finish": "2022-07-11T06:06:12.531898+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0/default/0",
          "run_id": "6e624256121225f671eb83f7d9d32111",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:41:12.584609+00:00",
            "finish": "2022-07-11T06:41:12.625599+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2022-07-11T06:41:12.584895+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.gestione_notturna_ventilatore_silvia",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-11T06:06:12.449295+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "gestione_notturna_ventilatore_silvia",
                      "friendly_name": "Gestione notturna ventilatore Silvia"
                    },
                    "last_changed": "2022-07-11T05:41:45.111393+00:00",
                    "last_updated": "2022-07-11T06:06:12.529400+00:00",
                    "context": {
                      "id": "01G7NXV1EZS74VPSQSAPCMTC5A",
                      "parent_id": "01G7NXS6VQ7C6T2S0RS51NV8Y5",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "platform": "numeric_state",
                    "entity_id": "sensor.temperatura_silvia",
                    "below": null,
                    "above": 30.0,
                    "from_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "30.0",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-11T06:35:12.567935+00:00",
                      "last_updated": "2022-07-11T06:35:12.567935+00:00",
                      "context": {
                        "id": "01G7NZG4SQ8XCW9K2Y2FFAJHYB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "30.1",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-11T06:40:12.576119+00:00",
                      "last_updated": "2022-07-11T06:40:12.576119+00:00",
                      "context": {
                        "id": "01G7NZS9S0GSFG3ZTDKEFXWKJP",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.temperatura_silvia"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T06:41:12.598219+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NZV4C8YY4YE3NW0Q5DN3JR",
                    "parent_id": "01G7NZS9S0GSFG3ZTDKEFXWKJP",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2022-07-11T06:41:12.598720+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2022-07-11T06:41:12.598954+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/1": [
              {
                "path": "action/0/choose/0/conditions/1",
                "timestamp": "2022-07-11T06:41:12.599738+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/1/entity_id/0": [
              {
                "path": "action/0/choose/0/conditions/1/entity_id/0",
                "timestamp": "2022-07-11T06:41:12.599920+00:00",
                "result": {
                  "result": false,
                  "state": "not_home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0/default/0": [
              {
                "path": "action/0/default/0",
                "timestamp": "2022-07-11T06:41:12.602783+00:00",
                "result": {
                  "params": {
                    "domain": "fan",
                    "service": "turn_off",
                    "service_data": {
                      "entity_id": "fan.ventilatore_silvia"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Gestione notturna ventilatore Silvia",
            "id": "gestione_notturna_ventilatore_silvia",
            "trigger": [
              {
                "platform": "time",
                "at": "06:30:00"
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "below": 30,
                "for": {
                  "minutes": 5
                }
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "above": 30,
                "for": {
                  "minutes": 1
                }
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ trigger.platform == 'numeric_state' and trigger.to_state.state | float > 30 }}"
                      },
                      {
                        "condition": "state",
                        "entity_id": "person.silvia",
                        "state": "home"
                      },
                      {
                        "condition": "time",
                        "after": "23:00:00",
                        "before": "06:20:00"
                      }
                    ],
                    "sequence": [
                      {
                        "service": "fan.turn_on",
                        "data": {
                          "entity_id": "fan.ventilatore_silvia"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "fan.turn_off",
                    "data": {
                      "entity_id": "fan.ventilatore_silvia"
                    }
                  }
                ]
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NZV4C8YY4YE3NW0Q5DN3JR",
            "parent_id": "01G7NZS9S0GSFG3ZTDKEFXWKJP",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/default/0",
          "run_id": "6e624256121225f671eb83f7d9d32111",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:41:12.584609+00:00",
            "finish": "2022-07-11T06:41:12.625599+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia"
        }
      }
    ],
    "automation.notifica_temperatura_frigo": [
      {
        "extended_dict": {
          "last_step": "action/2",
          "run_id": "5f84a8077f120bc84c24394166deb13c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:17:19.417924+00:00",
            "finish": "2022-07-11T06:17:19.486285+00:00"
          },
          "domain": "automation",
          "item_id": "notifica_temperatura_frigo",
          "trigger": "numeric state of sensor.temperatura_media_frigo",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-11T06:17:19.418262+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.notifica_temperatura_frigo",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-09T06:23:47.522741+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "notifica_temperatura_frigo",
                      "friendly_name": "Notifica temperatura frigo"
                    },
                    "last_changed": "2022-07-11T05:41:45.112144+00:00",
                    "last_updated": "2022-07-11T05:41:45.112144+00:00",
                    "context": {
                      "id": "01G7NWE8GR91WMK150K4137K83",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "numeric_state",
                    "entity_id": "sensor.temperatura_media_frigo",
                    "below": null,
                    "above": 9.0,
                    "from_state": {
                      "entity_id": "sensor.temperatura_media_frigo",
                      "state": "unavailable",
                      "attributes": {
                        "state_class": "measurement",
                        "icon": "mdi:calculator",
                        "friendly_name": "Temperatura media FRIGO"
                      },
                      "last_changed": "2022-07-11T05:46:59.733139+00:00",
                      "last_updated": "2022-07-11T05:46:59.733139+00:00",
                      "context": {
                        "id": "01G7NWQVRN21YA50HDCVWFPZRT",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.temperatura_media_frigo",
                      "state": "15.4",
                      "attributes": {
                        "state_class": "measurement",
                        "buffer_usage_ratio": 1.0,
                        "source_value_valid": true,
                        "unit_of_measurement": "\u00b0C",
                        "icon": "mdi:calculator",
                        "friendly_name": "Temperatura media FRIGO"
                      },
                      "last_changed": "2022-07-11T05:47:19.365426+00:00",
                      "last_updated": "2022-07-11T05:47:19.365426+00:00",
                      "context": {
                        "id": "01G7NWREY51RA8Y1K35NYCZYEK",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 1800.0
                    },
                    "description": "numeric state of sensor.temperatura_media_frigo"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-11T06:17:19.432171+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G7NYFCSSWTG7QJ7HYAYSQ56E",
                    "parent_id": "01G7NWREY51RA8Y1K35NYCZYEK",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "scialla",
                    "service_data": {
                      "title": "Domotica",
                      "message": "Rilevata temperatura media frigorifero troppo alta."
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-11T06:17:19.456000+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "08:17:19.456739"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:00:00"
                  },
                  "result": true
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-11T06:17:19.457963+00:00",
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "alexa_media",
                    "service_data": {
                      "target": "media_player.ovunque",
                      "data": {
                        "type": "announce",
                        "method": "spoken"
                      },
                      "message": "Rilevata temperatura media frigorifero troppo alta."
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Notifica temperatura frigo",
            "id": "notifica_temperatura_frigo",
            "trigger": [
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_media_frigo",
                "above": 9.0,
                "for": {
                  "minutes": 30
                }
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_media_frigo",
                "below": 3.0,
                "for": {
                  "minutes": 30
                }
              }
            ],
            "action": [
              {
                "service": "notify.scialla",
                "data": {
                  "title": "Domotica",
                  "message": "{% if trigger.to_state.state|float(0.0) > 9.0 %}\n  Rilevata temperatura media frigorifero troppo alta.\n{% elif trigger.to_state.state|float(0.0) < 3.0 %}\n  Rilevata temperatura media frigorifero troppo bassa.\n{% endif %}\n"
                }
              },
              {
                "condition": "time",
                "after": "08:00:00",
                "before": "23:00:00"
              },
              {
                "service": "notify.alexa_media",
                "data_template": {
                  "target": "media_player.ovunque",
                  "data": {
                    "type": "announce",
                    "method": "spoken"
                  },
                  "message": "{% if trigger.to_state.state|float(0.0) > 9.0 %} Rilevata temperatura media frigorifero troppo alta. {% elif trigger.to_state.state|float(0.0) < 3.0 %} Rilevata temperatura media frigorifero troppo bassa. {% endif %}\n"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G7NYFCSSWTG7QJ7HYAYSQ56E",
            "parent_id": "01G7NWREY51RA8Y1K35NYCZYEK",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/2",
          "run_id": "5f84a8077f120bc84c24394166deb13c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-11T06:17:19.417924+00:00",
            "finish": "2022-07-11T06:17:19.486285+00:00"
          },
          "domain": "automation",
          "item_id": "notifica_temperatura_frigo",
          "trigger": "numeric state of sensor.temperatura_media_frigo"
        }
      }
    ]
  }
}