{
  "version": 1,
  "minor_version": 1,
  "key": "trace.saved_traces",
  "data": {
    "automation.fa181cc8a2c7458cb020d87127e9cfde": [
      {
        "extended_dict": {
          "last_step": "action/6",
          "run_id": "bc6aa811622187749f341c3b5f5067af",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:37.510689+00:00",
            "finish": "2022-07-22T15:31:49.038419+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:31:37.510891+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.shellies_announce",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-21T18:01:07.005300+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "fa181cc8a2c7458cb020d87127e9cfde",
                      "friendly_name": "Shellies Announce"
                    },
                    "last_changed": "2022-07-22T15:31:09.387251+00:00",
                    "last_updated": "2022-07-22T15:31:09.387251+00:00",
                    "context": {
                      "id": "01G8K8HCYBZGHATMSNQ1EW3F2Q",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:31:37.957809+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8J8D6EEE65D878VEB15ME",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "payload": "announce",
                      "topic": "shellies/command"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-22T15:31:44.962890+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-22T15:31:45.536388+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER1"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-22T15:31:46.737153+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER2"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-22T15:31:47.414073+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER3"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-22T15:31:47.506294+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER4"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-22T15:31:47.541207+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER5"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Shellies Announce",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "data": {
                  "payload": "announce",
                  "topic": "shellies/command"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER1"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER2"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER3"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER4"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER5"
                },
                "service": "mqtt.publish"
              }
            ],
            "id": "fa181cc8a2c7458cb020d87127e9cfde"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8J8D6EEE65D878VEB15ME",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/6",
          "run_id": "bc6aa811622187749f341c3b5f5067af",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:37.510689+00:00",
            "finish": "2022-07-22T15:31:49.038419+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/6",
          "run_id": "8bd3b48eb2baa6c6ac36f1770f6a452e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:09.296391+00:00",
            "finish": "2022-07-22T15:49:21.980196+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:49:09.297189+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.shellies_announce",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:31:37.511453+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "fa181cc8a2c7458cb020d87127e9cfde",
                      "friendly_name": "Shellies Announce"
                    },
                    "last_changed": "2022-07-22T15:43:40.326262+00:00",
                    "last_updated": "2022-07-22T15:43:40.326262+00:00",
                    "context": {
                      "id": "01G8K98A967ATD6WGSTXA27R6T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:49:09.446855+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9JBHGP0R46EEY4725C2SY",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "payload": "announce",
                      "topic": "shellies/command"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-22T15:49:13.373833+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-22T15:49:14.253950+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER1"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-22T15:49:19.175449+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER2"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-22T15:49:19.785499+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER3"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-22T15:49:19.851442+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER4"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-22T15:49:20.177475+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "cmnd/tasmotas/POWER5"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Shellies Announce",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "data": {
                  "payload": "announce",
                  "topic": "shellies/command"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER1"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER2"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER3"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER4"
                },
                "service": "mqtt.publish"
              },
              {
                "data": {
                  "topic": "cmnd/tasmotas/POWER5"
                },
                "service": "mqtt.publish"
              }
            ],
            "id": "fa181cc8a2c7458cb020d87127e9cfde"
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JBHGP0R46EEY4725C2SY",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/6",
          "run_id": "8bd3b48eb2baa6c6ac36f1770f6a452e",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:09.296391+00:00",
            "finish": "2022-07-22T15:49:21.980196+00:00"
          },
          "domain": "automation",
          "item_id": "fa181cc8a2c7458cb020d87127e9cfde",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.ha_new_version_available": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "aa22aa236c1542174e1628a985a56632",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:31:37.514854+00:00",
            "finish": "2022-07-22T15:31:37.515348+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-22T15:31:37.514988+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.new_ha_version_available",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-20T21:02:50.100403+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "ha_new_version_available",
                      "friendly_name": "New HA Version available"
                    },
                    "last_changed": "2022-07-22T15:31:09.414529+00:00",
                    "last_updated": "2022-07-22T15:31:09.414529+00:00",
                    "context": {
                      "id": "01G8K8HCZ67GN1SKND7G3HGX62",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:31:37.515102+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:31:37.515188+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "alias": "New HA Version available",
            "id": "ha_new_version_available",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "to": "on"
              },
              {
                "event": "start",
                "platform": "homeassistant"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "state": "on"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unknown' }}"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unavailable' }}"
              }
            ],
            "action": [
              {
                "service": "persistent_notification.create",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              },
              {
                "service": "notify.scialla",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8J8DAZ9XDG4DAZG9NYBJT",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "aa22aa236c1542174e1628a985a56632",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:31:37.514854+00:00",
            "finish": "2022-07-22T15:31:37.515348+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "d360f008871208e9198464208b06ebe4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:49:09.300105+00:00",
            "finish": "2022-07-22T15:49:09.300644+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-22T15:49:09.300245+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.new_ha_version_available",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-20T21:02:50.100403+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "ha_new_version_available",
                      "friendly_name": "New HA Version available"
                    },
                    "last_changed": "2022-07-22T15:43:40.353353+00:00",
                    "last_updated": "2022-07-22T15:43:40.353353+00:00",
                    "context": {
                      "id": "01G8K98AA125GGZ94C7QT0HHBZ",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:49:09.300371+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:49:09.300472+00:00",
                "result": {
                  "result": false,
                  "state": "off",
                  "wanted_state": "on"
                }
              }
            ]
          },
          "config": {
            "alias": "New HA Version available",
            "id": "ha_new_version_available",
            "initial_state": true,
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "to": "on"
              },
              {
                "event": "start",
                "platform": "homeassistant"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "binary_sensor.ha_new_version",
                "state": "on"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unknown' }}"
              },
              {
                "condition": "template",
                "value_template": "{{ states('sensor.ha_latest_rest') != 'unavailable' }}"
              }
            ],
            "action": [
              {
                "service": "persistent_notification.create",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              },
              {
                "service": "notify.scialla",
                "data": {
                  "title": "New Version available!",
                  "message": "Version {{ states('sensor.ha_latest_rest') }} is available to download"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JBHK30XP411NV9SVZE8D",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "d360f008871208e9198464208b06ebe4",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:49:09.300105+00:00",
            "finish": "2022-07-22T15:49:09.300644+00:00"
          },
          "domain": "automation",
          "item_id": "ha_new_version_available",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.None": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "08b2e8f3f91fab0226e00f400ac3eab2",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:31:37.515945+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:31:37.516040+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.reset_piantana_e_ballerini_in_avvio_ha",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-21T18:01:07.008292+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Reset Piantana e Ballerini in avvio HA"
                    },
                    "last_changed": "2022-07-22T15:31:09.423144+00:00",
                    "last_updated": "2022-07-22T15:31:09.423144+00:00",
                    "context": {
                      "id": "01G8K8HCZFHR5ZPRZXCGBF2NFM",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:31:37.997289+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8J8DB9BB973ZK45ZASV2S",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.ballerini",
                        "light.koogeek_lb1_1f299c",
                        "light.cappa",
                        "light.striscia_letto",
                        "light.wled"
                      ]
                    }
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Reset Piantana e Ballerini in avvio HA",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "entity_id": "light.ballerini, light.koogeek_lb1_1f299c, light.cappa, light.striscia_letto, light.wled"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8J8DB9BB973ZK45ZASV2S",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "08b2e8f3f91fab0226e00f400ac3eab2",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:31:37.515945+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "3852e1e93f24d5455843e56125246b1d",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:31:37.517135+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:31:37.517233+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.apertura_contatti_e_reset",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-21T18:01:07.011301+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Apertura CONTATTI e reset"
                    },
                    "last_changed": "2022-07-22T15:31:09.426811+00:00",
                    "last_updated": "2022-07-22T15:31:09.426811+00:00",
                    "context": {
                      "id": "01G8K8HCZJA6FBJ6AN2F8YSJR1",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:31:37.999633+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8J8DD6TWM9SZBTT112WQ0",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "tele/SonoffBridge/RESULT",
                      "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                      "retain": true
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Apertura CONTATTI e reset",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "condition": [],
            "action": {
              "service": "mqtt.publish",
              "data": {
                "topic": "tele/SonoffBridge/RESULT",
                "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                "retain": true
              }
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8J8DD6TWM9SZBTT112WQ0",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "3852e1e93f24d5455843e56125246b1d",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:31:37.517135+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "a89ac159fd7b5e36f956f4b1e8ce1f5b",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:49:09.305275+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:49:09.305418+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.reset_piantana_e_ballerini_in_avvio_ha",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:31:37.516366+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Reset Piantana e Ballerini in avvio HA"
                    },
                    "last_changed": "2022-07-22T15:43:40.362229+00:00",
                    "last_updated": "2022-07-22T15:43:40.362229+00:00",
                    "context": {
                      "id": "01G8K98AAAHGBN7BQ40CF4MYYV",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:49:09.470642+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9JBHSJQY61JJF03VNBY0N",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "light",
                    "service": "turn_off",
                    "service_data": {},
                    "target": {
                      "entity_id": [
                        "light.ballerini",
                        "light.koogeek_lb1_1f299c",
                        "light.cappa",
                        "light.striscia_letto",
                        "light.wled"
                      ]
                    }
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Reset Piantana e Ballerini in avvio HA",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "action": [
              {
                "service": "light.turn_off",
                "entity_id": "light.ballerini, light.koogeek_lb1_1f299c, light.cappa, light.striscia_letto, light.wled"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JBHSJQY61JJF03VNBY0N",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "a89ac159fd7b5e36f956f4b1e8ce1f5b",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:49:09.305275+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "682459bda1951b8c588f4eff7c1e8b68",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:49:09.306619+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:49:09.306725+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.apertura_contatti_e_reset",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:31:37.517536+00:00",
                      "mode": "single",
                      "current": 0,
                      "friendly_name": "Apertura CONTATTI e reset"
                    },
                    "last_changed": "2022-07-22T15:43:40.366514+00:00",
                    "last_updated": "2022-07-22T15:43:40.366514+00:00",
                    "context": {
                      "id": "01G8K98AAEQCG4W4650KQJRWEF",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:49:09.472924+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9JBHTX79N4QNGE449S4RF",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "tele/SonoffBridge/RESULT",
                      "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                      "retain": true
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Apertura CONTATTI e reset",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              }
            ],
            "condition": [],
            "action": {
              "service": "mqtt.publish",
              "data": {
                "topic": "tele/SonoffBridge/RESULT",
                "payload": "{\"RfReceived\":{\"Data\":\"key_clean\"}}",
                "retain": true
              }
            }
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JBHTX79N4QNGE449S4RF",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "682459bda1951b8c588f4eff7c1e8b68",
          "state": "running",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:49:09.306619+00:00",
            "finish": null
          },
          "domain": "automation",
          "item_id": "None",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.announce_zigbee": [
      {
        "extended_dict": {
          "last_step": "action/12",
          "run_id": "12c09008447340fe0df76cda30535454",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:37.559222+00:00",
            "finish": "2022-07-22T15:31:51.052428+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:31:37.559408+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.announce_zigbee",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-21T18:01:07.013002+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "announce_zigbee",
                      "friendly_name": "Announce Zigbee"
                    },
                    "last_changed": "2022-07-22T15:31:09.441459+00:00",
                    "last_updated": "2022-07-22T15:31:09.441459+00:00",
                    "context": {
                      "id": "01G8K8HD01ZAQT0BJQGGWGX5X5",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:31:38.007203+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8J8EQ86GNBV09SMKMDAKB",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Selecline/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-22T15:31:45.359684+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Samsung/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-22T15:31:45.626815+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Onkyo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-22T15:31:47.117454+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Phon/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-22T15:31:47.488141+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-22T15:31:47.517819+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Frigo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-22T15:31:48.913909+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Antenna TV/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/7": [
              {
                "path": "action/7",
                "timestamp": "2022-07-22T15:31:49.162601+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Striscia Letto/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/8": [
              {
                "path": "action/8",
                "timestamp": "2022-07-22T15:31:50.771465+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Cappa/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/9": [
              {
                "path": "action/9",
                "timestamp": "2022-07-22T15:31:50.790088+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Lampada Zanzare/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/10": [
              {
                "path": "action/10",
                "timestamp": "2022-07-22T15:31:50.915731+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l1\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/11": [
              {
                "path": "action/11",
                "timestamp": "2022-07-22T15:31:50.955266+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l2\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/12": [
              {
                "path": "action/12",
                "timestamp": "2022-07-22T15:31:50.978871+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l3\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Announce Zigbee",
            "id": "announce_zigbee",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Selecline/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Samsung/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Onkyo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Phon/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Frigo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Antenna TV/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Striscia Letto/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Cappa/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Lampada Zanzare/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l1\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l2\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l3\":\"\"}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8J8EQ86GNBV09SMKMDAKB",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/12",
          "run_id": "12c09008447340fe0df76cda30535454",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:37.559222+00:00",
            "finish": "2022-07-22T15:31:51.052428+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "4cfeb1f53d2605f083f0228d8146e8d2",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2022-07-22T15:35:23.494061+00:00",
            "finish": "2022-07-22T15:35:25.778555+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "error": "Error talking to MQTT: The client is not currently connected.",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-22T15:35:23.494642+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.announce_zigbee",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:31:37.559834+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "announce_zigbee",
                      "friendly_name": "Announce Zigbee"
                    },
                    "last_changed": "2022-07-22T15:31:09.441459+00:00",
                    "last_updated": "2022-07-22T15:31:51.040665+00:00",
                    "context": {
                      "id": "01G8K8JNM0PSQJ2Y599YJAV7EC",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "platform": "state",
                    "entity_id": "sensor.zigbee2mqtt_bridge_state",
                    "from_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "online",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:31:19.971713+00:00",
                      "last_updated": "2022-07-22T15:31:19.971713+00:00",
                      "context": {
                        "id": "01G8K8HQ93VY5TEVYFZZHXW3S2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "offline",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:22.006048+00:00",
                      "last_updated": "2022-07-22T15:35:22.006048+00:00",
                      "context": {
                        "id": "01G8K8S3MPHCFA3999RV6X2P3X",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.zigbee2mqtt_bridge_state"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:35:23.915285+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8S535V6BAMC5Y0MQ2VKYW",
                    "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
                    "user_id": null
                  }
                },
                "error": "Error talking to MQTT: The client is not currently connected.",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Selecline/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Announce Zigbee",
            "id": "announce_zigbee",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Selecline/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Samsung/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Onkyo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Phon/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Frigo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Antenna TV/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Striscia Letto/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Cappa/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Lampada Zanzare/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l1\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l2\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l3\":\"\"}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S535V6BAMC5Y0MQ2VKYW",
            "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "4cfeb1f53d2605f083f0228d8146e8d2",
          "state": "stopped",
          "script_execution": "error",
          "timestamp": {
            "start": "2022-07-22T15:35:23.494061+00:00",
            "finish": "2022-07-22T15:35:25.778555+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "error": "Error talking to MQTT: The client is not currently connected.",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state"
        }
      },
      {
        "extended_dict": {
          "last_step": "trigger/1",
          "run_id": "7b5926d2c9e480bc5cdd686c84c7fb04",
          "state": "stopped",
          "script_execution": "failed_single",
          "timestamp": {
            "start": "2022-07-22T15:35:25.148115+00:00",
            "finish": "2022-07-22T15:35:25.150628+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state",
          "trace": {
            "trigger/1": [
              {
                "path": "trigger/1",
                "timestamp": "2022-07-22T15:35:25.148303+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.announce_zigbee",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:35:23.495342+00:00",
                      "mode": "single",
                      "current": 1,
                      "id": "announce_zigbee",
                      "friendly_name": "Announce Zigbee"
                    },
                    "last_changed": "2022-07-22T15:31:09.441459+00:00",
                    "last_updated": "2022-07-22T15:35:23.495539+00:00",
                    "context": {
                      "id": "01G8K8S535V6BAMC5Y0MQ2VKYW",
                      "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "1",
                    "idx": "1",
                    "platform": "state",
                    "entity_id": "sensor.zigbee2mqtt_bridge_state",
                    "from_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "offline",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:22.006048+00:00",
                      "last_updated": "2022-07-22T15:35:22.006048+00:00",
                      "context": {
                        "id": "01G8K8S3MPHCFA3999RV6X2P3X",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "unavailable",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:24.013953+00:00",
                      "last_updated": "2022-07-22T15:35:24.013953+00:00",
                      "context": {
                        "id": "01G8K8S5KDRG1KQQ1A1YHKSGMF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.zigbee2mqtt_bridge_state"
                  }
                }
              }
            ]
          },
          "config": {
            "alias": "Announce Zigbee",
            "id": "announce_zigbee",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Selecline/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Samsung/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Onkyo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Phon/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Frigo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Antenna TV/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Striscia Letto/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Cappa/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Lampada Zanzare/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l1\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l2\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l3\":\"\"}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S6PV7QTW6JFK8ZW85ACE",
            "parent_id": "01G8K8S5KDRG1KQQ1A1YHKSGMF",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "trigger/1",
          "run_id": "7b5926d2c9e480bc5cdd686c84c7fb04",
          "state": "stopped",
          "script_execution": "failed_single",
          "timestamp": {
            "start": "2022-07-22T15:35:25.148115+00:00",
            "finish": "2022-07-22T15:35:25.150628+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/12",
          "run_id": "5a896be021d534a4afacd1c90c3f1ff2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:09.310812+00:00",
            "finish": "2022-07-22T15:49:22.111304+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:49:09.310964+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.announce_zigbee",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:35:23.495342+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "announce_zigbee",
                      "friendly_name": "Announce Zigbee"
                    },
                    "last_changed": "2022-07-22T15:43:40.379788+00:00",
                    "last_updated": "2022-07-22T15:43:40.379788+00:00",
                    "context": {
                      "id": "01G8K98AAVF45EQXCD10X74JZA",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "homeassistant",
                    "event": "start",
                    "description": "Home Assistant starting"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:49:09.482401+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9JBHY58BJJ4YEQPYQTC3M",
                    "parent_id": null,
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Selecline/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/1": [
              {
                "path": "action/1",
                "timestamp": "2022-07-22T15:49:13.783855+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Samsung/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/2": [
              {
                "path": "action/2",
                "timestamp": "2022-07-22T15:49:18.055740+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Onkyo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/3": [
              {
                "path": "action/3",
                "timestamp": "2022-07-22T15:49:19.684567+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Phon/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/4": [
              {
                "path": "action/4",
                "timestamp": "2022-07-22T15:49:19.837734+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/5": [
              {
                "path": "action/5",
                "timestamp": "2022-07-22T15:49:19.917801+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Presa Frigo/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/6": [
              {
                "path": "action/6",
                "timestamp": "2022-07-22T15:49:21.601823+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Antenna TV/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/7": [
              {
                "path": "action/7",
                "timestamp": "2022-07-22T15:49:22.018312+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Striscia Letto/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/8": [
              {
                "path": "action/8",
                "timestamp": "2022-07-22T15:49:22.030002+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Cappa/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/9": [
              {
                "path": "action/9",
                "timestamp": "2022-07-22T15:49:22.040447+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/Lampada Zanzare/get",
                      "payload": "{\"state\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/10": [
              {
                "path": "action/10",
                "timestamp": "2022-07-22T15:49:22.049188+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l1\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/11": [
              {
                "path": "action/11",
                "timestamp": "2022-07-22T15:49:22.060966+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l2\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ],
            "action/12": [
              {
                "path": "action/12",
                "timestamp": "2022-07-22T15:49:22.087711+00:00",
                "result": {
                  "params": {
                    "domain": "mqtt",
                    "service": "publish",
                    "service_data": {
                      "topic": "zigbee2mqtt/CiabattaScrivania/get",
                      "payload": "{\"state_l3\":\"\"}"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Announce Zigbee",
            "id": "announce_zigbee",
            "trigger": [
              {
                "platform": "homeassistant",
                "event": "start"
              },
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Selecline/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Samsung/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Onkyo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Phon/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Mediaplayer/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Presa Frigo/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Antenna TV/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Striscia Letto/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Cappa/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/Lampada Zanzare/get",
                  "payload": "{\"state\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l1\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l2\":\"\"}"
                }
              },
              {
                "service": "mqtt.publish",
                "data": {
                  "topic": "zigbee2mqtt/CiabattaScrivania/get",
                  "payload": "{\"state_l3\":\"\"}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JBHY58BJJ4YEQPYQTC3M",
            "parent_id": null,
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/12",
          "run_id": "5a896be021d534a4afacd1c90c3f1ff2",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:09.310812+00:00",
            "finish": "2022-07-22T15:49:22.111304+00:00"
          },
          "domain": "automation",
          "item_id": "announce_zigbee",
          "trigger": "Home Assistant starting"
        }
      }
    ],
    "automation.aggiornamenti_app_hacs": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "3afae4141348a2ec1684a4702ca63077",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:51.824822+00:00",
            "finish": "2022-07-22T15:31:51.892797+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:31:51.824989+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.aggiornamenti_app_hacs",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T08:01:10.645108+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "aggiornamenti_app_hacs",
                      "friendly_name": "Aggiornamenti App Hacs"
                    },
                    "last_changed": "2022-07-22T15:31:09.433373+00:00",
                    "last_updated": "2022-07-22T15:31:09.433373+00:00",
                    "context": {
                      "id": "01G8K8HCZSQ9HEZBYGCGMPXVBA",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "numeric_state",
                    "entity_id": "sensor.hacs",
                    "below": null,
                    "above": 0.0,
                    "from_state": {
                      "entity_id": "sensor.hacs",
                      "state": "unknown",
                      "attributes": {
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-22T15:31:17.423825+00:00",
                      "last_updated": "2022-07-22T15:31:17.423825+00:00",
                      "context": {
                        "id": "01G8K8HMSFV6EM6A5R6E3PBWNX",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.hacs",
                      "state": "1",
                      "attributes": {
                        "repositories": [
                          {
                            "name": "custom-components/ble_monitor",
                            "display_name": "Passive BLE monitor integration",
                            "installed_version": "9.0.3",
                            "available_version": "9.0.5"
                          }
                        ],
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-22T15:31:51.796688+00:00",
                      "last_updated": "2022-07-22T15:31:51.796688+00:00",
                      "context": {
                        "id": "01G8K8JPBMVMSJMPV2322KMA7J",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "description": "numeric state of sensor.hacs"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:31:51.844511+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8JPCGFCX1HTDZ7G9E6SYW",
                    "parent_id": "01G8K8JPBMVMSJMPV2322KMA7J",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "scialla",
                    "service_data": {
                      "message": "Nuova versione di *Passive BLE monitor integration* (`custom-components/ble_monitor`) disponibile: `9.0.5`. Installata: `9.0.3`",
                      "data": {
                        "username": "HACS",
                        "icon": "hacs"
                      },
                      "title": "Nuova versione HACS disponibile"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Aggiornamenti App Hacs",
            "id": "aggiornamenti_app_hacs",
            "trigger": [
              {
                "entity_id": "sensor.hacs",
                "platform": "numeric_state",
                "above": 0
              }
            ],
            "action": [
              {
                "data": {
                  "message": "{% for repo in state_attr('sensor.hacs', 'repositories') %} Nuova versione di *{{ repo.display_name }}* (`{{ repo.name  }}`) disponibile: `{{ repo.available_version }}`. Installata: `{{ repo.installed_version }}`  {% endfor %}",
                  "data": {
                    "username": "HACS",
                    "icon": "hacs"
                  },
                  "title": "Nuova versione HACS disponibile"
                },
                "service": "notify.scialla"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8JPCGFCX1HTDZ7G9E6SYW",
            "parent_id": "01G8K8JPBMVMSJMPV2322KMA7J",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "3afae4141348a2ec1684a4702ca63077",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:31:51.824822+00:00",
            "finish": "2022-07-22T15:31:51.892797+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs"
        }
      },
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "19ed9e55a9ab235999a4657beee19b42",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:24.918627+00:00",
            "finish": "2022-07-22T15:49:25.180498+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:49:24.918756+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.aggiornamenti_app_hacs",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:31:51.825365+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "aggiornamenti_app_hacs",
                      "friendly_name": "Aggiornamenti App Hacs"
                    },
                    "last_changed": "2022-07-22T15:43:40.373509+00:00",
                    "last_updated": "2022-07-22T15:43:40.373509+00:00",
                    "context": {
                      "id": "01G8K98AANKT0RWTCKVWNEDK4H",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "numeric_state",
                    "entity_id": "sensor.hacs",
                    "below": null,
                    "above": 0.0,
                    "from_state": {
                      "entity_id": "sensor.hacs",
                      "state": "unknown",
                      "attributes": {
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-22T15:48:50.461922+00:00",
                      "last_updated": "2022-07-22T15:48:50.461922+00:00",
                      "context": {
                        "id": "01G8K9HS4XYY9Y2HNCMBAF9HS1",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.hacs",
                      "state": "1",
                      "attributes": {
                        "repositories": [
                          {
                            "name": "custom-components/ble_monitor",
                            "display_name": "Passive BLE monitor integration",
                            "installed_version": "9.0.3",
                            "available_version": "9.0.5"
                          }
                        ],
                        "unit_of_measurement": "pending update(s)",
                        "icon": "hacs:hacs",
                        "friendly_name": "hacs"
                      },
                      "last_changed": "2022-07-22T15:49:24.802820+00:00",
                      "last_updated": "2022-07-22T15:49:24.802820+00:00",
                      "context": {
                        "id": "01G8K9JTP2ENYQD5EEXZNCYW29",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "description": "numeric state of sensor.hacs"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:49:25.018614+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9JTSPKWA3K6YNHMJADFYP",
                    "parent_id": "01G8K9JTP2ENYQD5EEXZNCYW29",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "scialla",
                    "service_data": {
                      "message": "Nuova versione di *Passive BLE monitor integration* (`custom-components/ble_monitor`) disponibile: `9.0.5`. Installata: `9.0.3`",
                      "data": {
                        "username": "HACS",
                        "icon": "hacs"
                      },
                      "title": "Nuova versione HACS disponibile"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Aggiornamenti App Hacs",
            "id": "aggiornamenti_app_hacs",
            "trigger": [
              {
                "entity_id": "sensor.hacs",
                "platform": "numeric_state",
                "above": 0
              }
            ],
            "action": [
              {
                "data": {
                  "message": "{% for repo in state_attr('sensor.hacs', 'repositories') %} Nuova versione di *{{ repo.display_name }}* (`{{ repo.name  }}`) disponibile: `{{ repo.available_version }}`. Installata: `{{ repo.installed_version }}`  {% endfor %}",
                  "data": {
                    "username": "HACS",
                    "icon": "hacs"
                  },
                  "title": "Nuova versione HACS disponibile"
                },
                "service": "notify.scialla"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9JTSPKWA3K6YNHMJADFYP",
            "parent_id": "01G8K9JTP2ENYQD5EEXZNCYW29",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "19ed9e55a9ab235999a4657beee19b42",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:49:24.918627+00:00",
            "finish": "2022-07-22T15:49:25.180498+00:00"
          },
          "domain": "automation",
          "item_id": "aggiornamenti_app_hacs",
          "trigger": "numeric state of sensor.hacs"
        }
      }
    ],
    "automation.gestione_notturna_ventilatore_silvia": [
      {
        "extended_dict": {
          "last_step": "action/0/default/0",
          "run_id": "58d18c6183fbe924d1b717f8ad00ecbc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:50:50.900827+00:00",
            "finish": "2022-07-22T15:50:50.976107+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia",
          "trace": {
            "trigger/2": [
              {
                "path": "trigger/2",
                "timestamp": "2022-07-22T15:50:50.901168+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.gestione_notturna_ventilatore_silvia",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T04:30:00.014203+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "gestione_notturna_ventilatore_silvia",
                      "friendly_name": "Gestione notturna ventilatore Silvia"
                    },
                    "last_changed": "2022-07-22T15:43:40.352032+00:00",
                    "last_updated": "2022-07-22T15:43:40.352032+00:00",
                    "context": {
                      "id": "01G8K98AA0W7X5A59HSFNEN35D",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "2",
                    "idx": "2",
                    "platform": "numeric_state",
                    "entity_id": "sensor.temperatura_silvia",
                    "below": null,
                    "above": 30.0,
                    "from_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "unknown",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-22T15:48:55.024257+00:00",
                      "last_updated": "2022-07-22T15:48:55.024257+00:00",
                      "context": {
                        "id": "01G8K9HXKG23F6YKJ6Q1JVHNDR",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.temperatura_silvia",
                      "state": "33.5",
                      "attributes": {
                        "unit_of_measurement": "\u00b0C",
                        "friendly_name": "Temperatura Silvia"
                      },
                      "last_changed": "2022-07-22T15:49:50.860470+00:00",
                      "last_updated": "2022-07-22T15:49:50.860470+00:00",
                      "context": {
                        "id": "01G8K9KM4CPVJR2MDK4KRKZ9NB",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": {
                      "__type": "<class 'datetime.timedelta'>",
                      "total_seconds": 60.0
                    },
                    "description": "numeric state of sensor.temperatura_silvia"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:50:50.917052+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K9NERMM0TA57MK9JF46FSF",
                    "parent_id": "01G8K9KM4CPVJR2MDK4KRKZ9NB",
                    "user_id": null
                  }
                },
                "result": {
                  "choice": "default"
                }
              }
            ],
            "action/0/choose/0": [
              {
                "path": "action/0/choose/0",
                "timestamp": "2022-07-22T15:50:50.919430+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "action/0/choose/0/conditions/0": [
              {
                "path": "action/0/choose/0/conditions/0",
                "timestamp": "2022-07-22T15:50:50.919748+00:00",
                "result": {
                  "result": true,
                  "entities": []
                }
              }
            ],
            "action/0/choose/0/conditions/1": [
              {
                "path": "action/0/choose/0/conditions/1",
                "timestamp": "2022-07-22T15:50:50.939841+00:00",
                "result": {
                  "result": true
                }
              }
            ],
            "action/0/choose/0/conditions/1/entity_id/0": [
              {
                "path": "action/0/choose/0/conditions/1/entity_id/0",
                "timestamp": "2022-07-22T15:50:50.940162+00:00",
                "result": {
                  "result": true,
                  "state": "home",
                  "wanted_state": "home"
                }
              }
            ],
            "action/0/choose/0/conditions/2": [
              {
                "path": "action/0/choose/0/conditions/2",
                "timestamp": "2022-07-22T15:50:50.940665+00:00",
                "result": {
                  "after": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "23:00:00"
                  },
                  "now_time": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "17:50:50.940816"
                  },
                  "before": {
                    "__type": "<class 'datetime.time'>",
                    "isoformat": "06:20:00"
                  },
                  "result": false
                }
              }
            ],
            "action/0/default/0": [
              {
                "path": "action/0/default/0",
                "timestamp": "2022-07-22T15:50:50.944349+00:00",
                "result": {
                  "params": {
                    "domain": "fan",
                    "service": "turn_off",
                    "service_data": {
                      "entity_id": "fan.ventilatore_silvia"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Gestione notturna ventilatore Silvia",
            "id": "gestione_notturna_ventilatore_silvia",
            "trigger": [
              {
                "platform": "time",
                "at": "06:30:00"
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "below": 30,
                "for": {
                  "minutes": 5
                }
              },
              {
                "platform": "numeric_state",
                "entity_id": "sensor.temperatura_silvia",
                "above": 30,
                "for": {
                  "minutes": 1
                }
              }
            ],
            "action": [
              {
                "choose": [
                  {
                    "conditions": [
                      {
                        "condition": "template",
                        "value_template": "{{ trigger.platform == 'numeric_state' and trigger.to_state.state | float > 30 }}"
                      },
                      {
                        "condition": "state",
                        "entity_id": "person.silvia",
                        "state": "home"
                      },
                      {
                        "condition": "time",
                        "after": "23:00:00",
                        "before": "06:20:00"
                      }
                    ],
                    "sequence": [
                      {
                        "service": "fan.turn_on",
                        "data": {
                          "entity_id": "fan.ventilatore_silvia"
                        }
                      }
                    ]
                  }
                ],
                "default": [
                  {
                    "service": "fan.turn_off",
                    "data": {
                      "entity_id": "fan.ventilatore_silvia"
                    }
                  }
                ]
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K9NERMM0TA57MK9JF46FSF",
            "parent_id": "01G8K9KM4CPVJR2MDK4KRKZ9NB",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0/default/0",
          "run_id": "58d18c6183fbe924d1b717f8ad00ecbc",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:50:50.900827+00:00",
            "finish": "2022-07-22T15:50:50.976107+00:00"
          },
          "domain": "automation",
          "item_id": "gestione_notturna_ventilatore_silvia",
          "trigger": "numeric state of sensor.temperatura_silvia"
        }
      }
    ],
    "automation.attivazione_luce_specchiera_di_notte": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "429908a70462874b8d5dcb025fea962b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:32:16.935138+00:00",
            "finish": "2022-07-22T15:32:16.937024+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:32:16.935451+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.attivazione_luce_specchiera_di_notte",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T03:49:55.233354+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "attivazione_luce_specchiera_di_notte",
                      "friendly_name": "attivazione luce specchiera di notte"
                    },
                    "last_changed": "2022-07-22T15:31:09.421248+00:00",
                    "last_updated": "2022-07-22T15:31:09.421248+00:00",
                    "context": {
                      "id": "01G8K8HCZDNEEQCAG0NQW7TEE4",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_ingresso",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T15:31:19.522738+00:00",
                      "last_updated": "2022-07-22T15:31:19.522738+00:00",
                      "context": {
                        "id": "01G8K8HPV2A8GMSDP4M69XH31F",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T15:32:16.912851+00:00",
                      "last_updated": "2022-07-22T15:32:16.912851+00:00",
                      "context": {
                        "id": "01G8K8KEWG1A3AKJBJCPDXV0R3",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_ingresso"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:32:16.936399+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:32:16.936637+00:00",
                "result": {
                  "result": false,
                  "state": "armed_home",
                  "wanted_state": "armed_night"
                }
              }
            ]
          },
          "config": {
            "alias": "attivazione luce specchiera di notte",
            "id": "attivazione_luce_specchiera_di_notte",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.pir_ingresso",
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "alarm_control_panel.allarme_casa",
                "state": "armed_night"
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "entity_id": "light.sonoff_10009c0093"
              },
              {
                "delay": {
                  "minutes": 6
                }
              },
              {
                "service": "light.turn_off",
                "entity_id": "light.sonoff_10009c0093"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8KEX6ZCXPCWWE3XYKN3SF",
            "parent_id": "01G8K8KEWG1A3AKJBJCPDXV0R3",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "429908a70462874b8d5dcb025fea962b",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:32:16.935138+00:00",
            "finish": "2022-07-22T15:32:16.937024+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "780232344f4002e19a9802af8248c540",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:33:03.118951+00:00",
            "finish": "2022-07-22T15:33:03.120263+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:33:03.119243+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.attivazione_luce_specchiera_di_notte",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T03:49:55.233354+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "attivazione_luce_specchiera_di_notte",
                      "friendly_name": "attivazione luce specchiera di notte"
                    },
                    "last_changed": "2022-07-22T15:31:09.421248+00:00",
                    "last_updated": "2022-07-22T15:31:09.421248+00:00",
                    "context": {
                      "id": "01G8K8HCZDNEEQCAG0NQW7TEE4",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_ingresso",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T15:32:19.914102+00:00",
                      "last_updated": "2022-07-22T15:32:19.914102+00:00",
                      "context": {
                        "id": "01G8K8KHTABBPZ0P35XE9FT8H7",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T15:33:03.095095+00:00",
                      "last_updated": "2022-07-22T15:33:03.095095+00:00",
                      "context": {
                        "id": "01G8K8MVZQ1WMX8QHJDF2A2JSE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_ingresso"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:33:03.119545+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:33:03.119828+00:00",
                "result": {
                  "result": false,
                  "state": "armed_home",
                  "wanted_state": "armed_night"
                }
              }
            ]
          },
          "config": {
            "alias": "attivazione luce specchiera di notte",
            "id": "attivazione_luce_specchiera_di_notte",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.pir_ingresso",
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "alarm_control_panel.allarme_casa",
                "state": "armed_night"
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "entity_id": "light.sonoff_10009c0093"
              },
              {
                "delay": {
                  "minutes": 6
                }
              },
              {
                "service": "light.turn_off",
                "entity_id": "light.sonoff_10009c0093"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8MW0EH7VFXM731A3Y75TY",
            "parent_id": "01G8K8MVZQ1WMX8QHJDF2A2JSE",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "780232344f4002e19a9802af8248c540",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:33:03.118951+00:00",
            "finish": "2022-07-22T15:33:03.120263+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "f6db59a9452a931789446a99494b2b63",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T16:01:09.869671+00:00",
            "finish": "2022-07-22T16:01:09.871030+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T16:01:09.869985+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.attivazione_luce_specchiera_di_notte",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T03:49:55.233354+00:00",
                      "mode": "single",
                      "current": 0,
                      "id": "attivazione_luce_specchiera_di_notte",
                      "friendly_name": "attivazione luce specchiera di notte"
                    },
                    "last_changed": "2022-07-22T15:43:40.360293+00:00",
                    "last_updated": "2022-07-22T15:43:40.360293+00:00",
                    "context": {
                      "id": "01G8K98AA8Q5BRZCATTQC3JDK8",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_ingresso",
                    "from_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "off",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T15:48:25.733561+00:00",
                      "last_updated": "2022-07-22T15:48:25.733561+00:00",
                      "context": {
                        "id": "01G8K9H105527MT8DESJQX5QM8",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.pir_ingresso",
                      "state": "on",
                      "attributes": {
                        "device_class": "motion",
                        "friendly_name": "PIR Ingresso"
                      },
                      "last_changed": "2022-07-22T16:01:09.844915+00:00",
                      "last_updated": "2022-07-22T16:01:09.844915+00:00",
                      "context": {
                        "id": "01G8KA8B6MP0YBTB492CX9MGRD",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.pir_ingresso"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T16:01:09.870289+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T16:01:09.870569+00:00",
                "result": {
                  "result": false,
                  "state": "armed_home",
                  "wanted_state": "armed_night"
                }
              }
            ]
          },
          "config": {
            "alias": "attivazione luce specchiera di notte",
            "id": "attivazione_luce_specchiera_di_notte",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "binary_sensor.pir_ingresso",
                "to": "on"
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "alarm_control_panel.allarme_casa",
                "state": "armed_night"
              }
            ],
            "action": [
              {
                "service": "light.turn_on",
                "entity_id": "light.sonoff_10009c0093"
              },
              {
                "delay": {
                  "minutes": 6
                }
              },
              {
                "service": "light.turn_off",
                "entity_id": "light.sonoff_10009c0093"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8KA8B7DW86HWV7CTZCXWHNA",
            "parent_id": "01G8KA8B6MP0YBTB492CX9MGRD",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "f6db59a9452a931789446a99494b2b63",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T16:01:09.869671+00:00",
            "finish": "2022-07-22T16:01:09.871030+00:00"
          },
          "domain": "automation",
          "item_id": "attivazione_luce_specchiera_di_notte",
          "trigger": "state of binary_sensor.pir_ingresso"
        }
      }
    ],
    "automation.avviso_zigbee_down": [
      {
        "extended_dict": {
          "last_step": "action/0",
          "run_id": "18a3cb48f4612a38a9d24f0427c9136c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:35:23.491931+00:00",
            "finish": "2022-07-22T15:35:25.798031+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_zigbee_down",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:35:23.492145+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.avviso_zigbee_down",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-20T09:29:19.408406+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "id": "avviso_zigbee_down",
                      "friendly_name": "Avviso Zigbee down"
                    },
                    "last_changed": "2022-07-22T15:31:09.440666+00:00",
                    "last_updated": "2022-07-22T15:31:09.440666+00:00",
                    "context": {
                      "id": "01G8K8HD004Y33D3T4PWJ7Q81T",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "sensor.zigbee2mqtt_bridge_state",
                    "from_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "online",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:31:19.971713+00:00",
                      "last_updated": "2022-07-22T15:31:19.971713+00:00",
                      "context": {
                        "id": "01G8K8HQ93VY5TEVYFZZHXW3S2",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "offline",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:22.006048+00:00",
                      "last_updated": "2022-07-22T15:35:22.006048+00:00",
                      "context": {
                        "id": "01G8K8S3MPHCFA3999RV6X2P3X",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.zigbee2mqtt_bridge_state"
                  }
                }
              }
            ],
            "action/0": [
              {
                "path": "action/0",
                "timestamp": "2022-07-22T15:35:25.342865+00:00",
                "changed_variables": {
                  "context": {
                    "id": "01G8K8S533SXQ0QQ379W6522D8",
                    "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
                    "user_id": null
                  }
                },
                "result": {
                  "params": {
                    "domain": "notify",
                    "service": "scialla",
                    "service_data": {
                      "title": "Zigbee",
                      "message": "Il Coordinator \u00e8 unavailable"
                    },
                    "target": {}
                  },
                  "running_script": false,
                  "limit": 10
                }
              }
            ]
          },
          "config": {
            "alias": "Avviso Zigbee down",
            "id": "avviso_zigbee_down",
            "mode": "queued",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "notify.scialla",
                "data": {
                  "title": "Zigbee",
                  "message": "Il Coordinator \u00e8 {{ states('sensor.zigbee2mqtt_bridge_state') }}\n"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S533SXQ0QQ379W6522D8",
            "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "action/0",
          "run_id": "18a3cb48f4612a38a9d24f0427c9136c",
          "state": "stopped",
          "script_execution": "finished",
          "timestamp": {
            "start": "2022-07-22T15:35:23.491931+00:00",
            "finish": "2022-07-22T15:35:25.798031+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_zigbee_down",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state"
        }
      },
      {
        "extended_dict": {
          "last_step": "trigger/0",
          "run_id": "b8f0d5dec0b8da3da0d7549c1820edaa",
          "state": "stopped",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:35:25.146520+00:00",
            "finish": "2022-07-22T15:35:25.785227+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_zigbee_down",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:35:25.146848+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.avviso_zigbee_down",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T15:35:23.492637+00:00",
                      "mode": "queued",
                      "current": 1,
                      "max": 10,
                      "id": "avviso_zigbee_down",
                      "friendly_name": "Avviso Zigbee down"
                    },
                    "last_changed": "2022-07-22T15:31:09.440666+00:00",
                    "last_updated": "2022-07-22T15:35:23.493139+00:00",
                    "context": {
                      "id": "01G8K8S533SXQ0QQ379W6522D8",
                      "parent_id": "01G8K8S3MPHCFA3999RV6X2P3X",
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "sensor.zigbee2mqtt_bridge_state",
                    "from_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "offline",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:22.006048+00:00",
                      "last_updated": "2022-07-22T15:35:22.006048+00:00",
                      "context": {
                        "id": "01G8K8S3MPHCFA3999RV6X2P3X",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.zigbee2mqtt_bridge_state",
                      "state": "unavailable",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "Zigbee2mqtt Bridge state"
                      },
                      "last_changed": "2022-07-22T15:35:24.013953+00:00",
                      "last_updated": "2022-07-22T15:35:24.013953+00:00",
                      "context": {
                        "id": "01G8K8S5KDRG1KQQ1A1YHKSGMF",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.zigbee2mqtt_bridge_state"
                  }
                }
              }
            ]
          },
          "config": {
            "alias": "Avviso Zigbee down",
            "id": "avviso_zigbee_down",
            "mode": "queued",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.zigbee2mqtt_bridge_state"
              }
            ],
            "action": [
              {
                "service": "notify.scialla",
                "data": {
                  "title": "Zigbee",
                  "message": "Il Coordinator \u00e8 {{ states('sensor.zigbee2mqtt_bridge_state') }}\n"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S6PTAW0XAZW56DAKEFXH",
            "parent_id": "01G8K8S5KDRG1KQQ1A1YHKSGMF",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "trigger/0",
          "run_id": "b8f0d5dec0b8da3da0d7549c1820edaa",
          "state": "stopped",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:35:25.146520+00:00",
            "finish": "2022-07-22T15:35:25.785227+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_zigbee_down",
          "trigger": "state of sensor.zigbee2mqtt_bridge_state"
        }
      }
    ],
    "automation.accensione_luce_balcone": [
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "4e396ebcd33ed308142c8c78d017ce29",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:35:23.845657+00:00",
            "finish": "2022-07-22T15:35:23.846309+00:00"
          },
          "domain": "automation",
          "item_id": "accensione_luce_balcone",
          "trigger": "state of binary_sensor.porta_balcone_studio_contact",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:35:23.845818+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.accensione_luce_balcone",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T00:46:32.788176+00:00",
                      "mode": "restart",
                      "current": 0,
                      "id": "accensione_luce_balcone",
                      "friendly_name": "Accensione luce balcone"
                    },
                    "last_changed": "2022-07-22T15:31:09.421721+00:00",
                    "last_updated": "2022-07-22T15:31:09.421721+00:00",
                    "context": {
                      "id": "01G8K8HCZDWCWBBM227KKKR5SY",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "binary_sensor.porta_balcone_studio_contact",
                    "from_state": {
                      "entity_id": "binary_sensor.porta_balcone_studio_contact",
                      "state": "off",
                      "attributes": {
                        "battery": 100,
                        "contact": true,
                        "device_temperature": 35,
                        "linkquality": 10,
                        "power_outage_count": 31,
                        "temperature": 29,
                        "voltage": 3045,
                        "device_class": "door",
                        "friendly_name": "Porta Balcone Studio contact"
                      },
                      "last_changed": "2022-07-22T15:31:32.202942+00:00",
                      "last_updated": "2022-07-22T15:31:32.202942+00:00",
                      "context": {
                        "id": "01G8K8J37ADGNQVNKX2B0EGWHN",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.porta_balcone_studio_contact",
                      "state": "unavailable",
                      "attributes": {
                        "device_class": "door",
                        "friendly_name": "Porta Balcone Studio contact"
                      },
                      "last_changed": "2022-07-22T15:35:22.149359+00:00",
                      "last_updated": "2022-07-22T15:35:22.149359+00:00",
                      "context": {
                        "id": "01G8K8S3S5QD3RDQHKYC91KMX5",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.porta_balcone_studio_contact"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:35:23.846013+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:35:23.846102+00:00",
                "result": {
                  "result": false,
                  "state": "above_horizon",
                  "wanted_state": "below_horizon"
                }
              }
            ]
          },
          "config": {
            "alias": "Accensione luce balcone",
            "id": "accensione_luce_balcone",
            "mode": "restart",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.porta_balcone_studio_contact",
                  "binary_sensor.porta_balcone_ingresso_contact"
                ],
                "to": null
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "sun.sun",
                "state": "below_horizon"
              }
            ],
            "action": [
              {
                "service": "light.turn_{{ trigger.to_state.state }}",
                "entity_id": "light.luce_balcone"
              },
              {
                "delay": "00:00:02"
              },
              {
                "condition": "state",
                "entity_id": "light.luce_balcone",
                "state": "on"
              },
              {
                "wait_for_trigger": [
                  {
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_balcone",
                    "to": "off",
                    "for": "00:02:00"
                  }
                ],
                "timeout": {
                  "minutes": 30
                }
              },
              {
                "service": "light.turn_off",
                "entity_id": "light.luce_balcone"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S5E52Z7Q1SHEPD9KWGA4",
            "parent_id": "01G8K8S3S5QD3RDQHKYC91KMX5",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "4e396ebcd33ed308142c8c78d017ce29",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:35:23.845657+00:00",
            "finish": "2022-07-22T15:35:23.846309+00:00"
          },
          "domain": "automation",
          "item_id": "accensione_luce_balcone",
          "trigger": "state of binary_sensor.porta_balcone_studio_contact"
        }
      },
      {
        "extended_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "56cb262088b90863b1d81620e24c5c44",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:35:23.848119+00:00",
            "finish": "2022-07-22T15:35:23.848607+00:00"
          },
          "domain": "automation",
          "item_id": "accensione_luce_balcone",
          "trigger": "state of binary_sensor.porta_balcone_ingresso_contact",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:35:23.848233+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.accensione_luce_balcone",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T00:46:32.788176+00:00",
                      "mode": "restart",
                      "current": 0,
                      "id": "accensione_luce_balcone",
                      "friendly_name": "Accensione luce balcone"
                    },
                    "last_changed": "2022-07-22T15:31:09.421721+00:00",
                    "last_updated": "2022-07-22T15:31:09.421721+00:00",
                    "context": {
                      "id": "01G8K8HCZDWCWBBM227KKKR5SY",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "binary_sensor.porta_balcone_ingresso_contact",
                    "from_state": {
                      "entity_id": "binary_sensor.porta_balcone_ingresso_contact",
                      "state": "off",
                      "attributes": {
                        "battery": 100,
                        "contact": true,
                        "device_temperature": 38,
                        "linkquality": 0,
                        "power_outage_count": 27,
                        "temperature": 28,
                        "voltage": 3075,
                        "device_class": "door",
                        "friendly_name": "Porta Balcone Ingresso contact"
                      },
                      "last_changed": "2022-07-22T15:31:32.315951+00:00",
                      "last_updated": "2022-07-22T15:31:32.315951+00:00",
                      "context": {
                        "id": "01G8K8J3AVYK5YAFGDGCDA8QYA",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "binary_sensor.porta_balcone_ingresso_contact",
                      "state": "unavailable",
                      "attributes": {
                        "device_class": "door",
                        "friendly_name": "Porta Balcone Ingresso contact"
                      },
                      "last_changed": "2022-07-22T15:35:22.150181+00:00",
                      "last_updated": "2022-07-22T15:35:22.150181+00:00",
                      "context": {
                        "id": "01G8K8S3S6CX9VDKQ37C7PRMVE",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of binary_sensor.porta_balcone_ingresso_contact"
                  }
                }
              }
            ],
            "condition/0": [
              {
                "path": "condition/0",
                "timestamp": "2022-07-22T15:35:23.848348+00:00",
                "result": {
                  "result": false
                }
              }
            ],
            "condition/0/entity_id/0": [
              {
                "path": "condition/0/entity_id/0",
                "timestamp": "2022-07-22T15:35:23.848438+00:00",
                "result": {
                  "result": false,
                  "state": "above_horizon",
                  "wanted_state": "below_horizon"
                }
              }
            ]
          },
          "config": {
            "alias": "Accensione luce balcone",
            "id": "accensione_luce_balcone",
            "mode": "restart",
            "trigger": [
              {
                "platform": "state",
                "entity_id": [
                  "binary_sensor.porta_balcone_studio_contact",
                  "binary_sensor.porta_balcone_ingresso_contact"
                ],
                "to": null
              }
            ],
            "condition": [
              {
                "condition": "state",
                "entity_id": "sun.sun",
                "state": "below_horizon"
              }
            ],
            "action": [
              {
                "service": "light.turn_{{ trigger.to_state.state }}",
                "entity_id": "light.luce_balcone"
              },
              {
                "delay": "00:00:02"
              },
              {
                "condition": "state",
                "entity_id": "light.luce_balcone",
                "state": "on"
              },
              {
                "wait_for_trigger": [
                  {
                    "platform": "state",
                    "entity_id": "binary_sensor.pir_balcone",
                    "to": "off",
                    "for": "00:02:00"
                  }
                ],
                "timeout": {
                  "minutes": 30
                }
              },
              {
                "service": "light.turn_off",
                "entity_id": "light.luce_balcone"
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S5E7GV6FTRNXZV7GF496",
            "parent_id": "01G8K8S3S6CX9VDKQ37C7PRMVE",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "condition/0/entity_id/0",
          "run_id": "56cb262088b90863b1d81620e24c5c44",
          "state": "stopped",
          "script_execution": "failed_conditions",
          "timestamp": {
            "start": "2022-07-22T15:35:23.848119+00:00",
            "finish": "2022-07-22T15:35:23.848607+00:00"
          },
          "domain": "automation",
          "item_id": "accensione_luce_balcone",
          "trigger": "state of binary_sensor.porta_balcone_ingresso_contact"
        }
      }
    ],
    "automation.avviso_sonoff_rf_down": [
      {
        "extended_dict": {
          "last_step": "trigger/0",
          "run_id": "bccb20fe3c274f5bfebc737b6e2d0975",
          "state": "stopped",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:35:25.117097+00:00",
            "finish": "2022-07-22T15:35:25.606290+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_sonoff_rf_down",
          "trigger": "state of sensor.sonoffbridge_state",
          "trace": {
            "trigger/0": [
              {
                "path": "trigger/0",
                "timestamp": "2022-07-22T15:35:25.117263+00:00",
                "changed_variables": {
                  "this": {
                    "entity_id": "automation.avviso_sonoff_rf_down",
                    "state": "on",
                    "attributes": {
                      "last_triggered": "2022-07-22T14:51:14.766847+00:00",
                      "mode": "queued",
                      "current": 0,
                      "max": 10,
                      "id": "avviso_sonoff_rf_down",
                      "friendly_name": "Avviso Sonoff RF Down"
                    },
                    "last_changed": "2022-07-22T15:31:09.429905+00:00",
                    "last_updated": "2022-07-22T15:31:09.429905+00:00",
                    "context": {
                      "id": "01G8K8HCZNMMMGN0NC3X2SVKP3",
                      "parent_id": null,
                      "user_id": null
                    }
                  },
                  "trigger": {
                    "id": "0",
                    "idx": "0",
                    "platform": "state",
                    "entity_id": "sensor.sonoffbridge_state",
                    "from_state": {
                      "entity_id": "sensor.sonoffbridge_state",
                      "state": "Online",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "sonoffbridge state"
                      },
                      "last_changed": "2022-07-22T15:31:19.965188+00:00",
                      "last_updated": "2022-07-22T15:31:19.965188+00:00",
                      "context": {
                        "id": "01G8K8HQ8XEGR7R1MCNDKDTCBV",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "to_state": {
                      "entity_id": "sensor.sonoffbridge_state",
                      "state": "unavailable",
                      "attributes": {
                        "icon": "mdi:router-wireless",
                        "friendly_name": "sonoffbridge state"
                      },
                      "last_changed": "2022-07-22T15:35:23.808353+00:00",
                      "last_updated": "2022-07-22T15:35:23.808353+00:00",
                      "context": {
                        "id": "01G8K8S5D0Z6KAV7PYKVS2PC40",
                        "parent_id": null,
                        "user_id": null
                      }
                    },
                    "for": null,
                    "attribute": null,
                    "description": "state of sensor.sonoffbridge_state"
                  }
                }
              }
            ]
          },
          "config": {
            "alias": "Avviso Sonoff RF Down",
            "id": "avviso_sonoff_rf_down",
            "mode": "queued",
            "trigger": [
              {
                "platform": "state",
                "entity_id": "sensor.sonoffbridge_state"
              }
            ],
            "action": [
              {
                "service": "notify.scialla",
                "data": {
                  "title": "Sonoff Bridge RF",
                  "message": "Il Bridge \u00e8 {{ states('sensor.sonoffbridge_state') }}"
                }
              }
            ]
          },
          "blueprint_inputs": null,
          "context": {
            "id": "01G8K8S6NWR31NYKRJ1TEGJ503",
            "parent_id": "01G8K8S5D0Z6KAV7PYKVS2PC40",
            "user_id": null
          }
        },
        "short_dict": {
          "last_step": "trigger/0",
          "run_id": "bccb20fe3c274f5bfebc737b6e2d0975",
          "state": "stopped",
          "script_execution": null,
          "timestamp": {
            "start": "2022-07-22T15:35:25.117097+00:00",
            "finish": "2022-07-22T15:35:25.606290+00:00"
          },
          "domain": "automation",
          "item_id": "avviso_sonoff_rf_down",
          "trigger": "state of sensor.sonoffbridge_state"
        }
      }
    ]
  }
}